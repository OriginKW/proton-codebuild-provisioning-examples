infrastructure:
  templates:
    - rendering_engine: codebuild
      settings:
        image: aws/codebuild/standard:6.0
        runtimes:
          golang: 1.18
        project_properties:
          # this setting will throw an error in case the account's
          # CodeBuild "Concurrently running builds" quota is too low
          ConcurrentBuildLimit: 2
        env:
          variables:
            TF_VERSION: 1.4.2

        provision:
          # build tf state based on proton input
          - . ./tf-state.sh && echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # provision, storing state in an s3 bucket
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform apply -var-file=proton-inputs.json -auto-approve

          # pass terraform output to proton
          - chmod +x ./output.sh && ./output.sh

        deprovision:
          # build tf state based on proton input
          - . ./tf-state.sh && echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # provision, storing state in an s3 bucket
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform destroy -var-file=proton-inputs.json -auto-approve
